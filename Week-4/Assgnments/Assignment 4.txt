
#########################################################################
#Q2
library(readxl)
#Reading the Excel file 
BeverageSales.df <- read_excel("Beverage Sales.xlsx")
head(BeverageSales.df)
plot(BeverageSales.df$Temperature,BeverageSales.df$Sales)
# Function to perform z-score normalization
normalize <- function(x) {
  return ((x - min(x)) / (max(x) - min(x)))
}

BeverageSales.df$Temperature <- normalize(BeverageSales.df$Temperature)
BeverageSales.df$Sales <- normalize(BeverageSales.df$Sales)

BeverageSales.df
BeverageSales_Reg<-lm(BeverageSales.df$Sales ~ ., data = BeverageSales.df)
summary(BeverageSales_Reg)


# Create a scatterplot of your data
plot(BeverageSales.df$Temperature, BeverageSales.df$Sales, 
     main = "Scatterplot with Regression Line",
     xlab = "Temperature",
     ylab = "Sales")

# Add the regression line to the plot
abline(BeverageSales_Reg, col = "red")

################################################################################
# Q3
library(readxl)
#Reading the Excel file 
emp_salary.df <- read_excel("KNN Employee Salaries.xlsx", sheet = "Data") 
New.df <- read_excel("KNN Employee Salaries.xlsx", sheet = "New Data")
normalize <- function(x) {
  return ((x - min(x)) / (max(x) - min(x)))
}
#Normalize the data using above function for Salary and Age
emp_salary.df$Salary<-normalize(emp_salary.df$Salary)
emp_salary.df$Age<-normalize(emp_salary.df$Age)
# Display the normalized data
emp_salary.df

# Normalize new data
New.df$Salary<-normalize(New.df$Salary)
New.df$Age<-normalize(New.df$Age)
New.df
# Explore the data using boxplot
boxplot(Salary ~ MBA, data = emp_salary.df, ylab = "Salary")
boxplot(Age ~ MBA, data = emp_salary.df, ylab = "Age")

library(caret)
set.seed(2023)
# data partioning 
data_partiton<-createDataPartition(emp_salary.df$MBA, p = 0.6, list = FALSE)
train_data<-emp_salary.df[data_partiton,]
rest_data<-emp_salary.df[-data_partiton,]

data_partiton1<-createDataPartition(rest_data$MBA, p = 0.5, list = FALSE)
Eval_data<-rest_data[data_partiton1,]
test_data<-rest_data[-data_partiton1,]

library(class)
# Choosing value k value
k=5
model<-knn(train_data[,c("Age","Salary")], Eval_data[,c("Age","Salary")], train_data$MBA, k)
print(model)
# Apply the model on
model_test<-knn(train_data[,c("Age","Salary")], test_data[,c("Age","Salary")], train_data$MBA, k)
print(model_test)

# Apply the model on normalized new dataset
PredictionNew_data <- knn(train_data[,c("Age","Salary")], New.df[,c("Age","Salary")], train_data$MBA, k=5)
print(PredictionNew_data)


#####################################################################################################
# Q4
# Read the BostonHousing dataset which is in mlba package
BostonHousing.df<-read.csv("boston-housing-classification.csv")
# Display the first 6 rows of the dataset
head(BostonHousing.df)

# Remove columns 2, 4, 9, and 12
UpdatedBostonHousing.df<-BostonHousing.df[, -c(2,4,9,12)]
# Display the first 6 rows of the updated dataframe
head(UpdatedBostonHousing.df)

#Create boxplot for each predictor
par(mfcol=c(1, 7))
boxplot(CRIM ~ MEDV_CAT, data = UpdatedBostonHousing.df, ylab = "CRIM")
boxplot(NOX ~ MEDV_CAT, data = UpdatedBostonHousing.df, ylab = "NOX")
boxplot(AGE ~ MEDV_CAT, data = UpdatedBostonHousing.df, ylab = "AGE")
boxplot(DIS ~ MEDV_CAT, data = UpdatedBostonHousing.df, ylab = "DIS")
boxplot(TAX ~ MEDV_CAT, data = UpdatedBostonHousing.df, ylab = "TAX")
boxplot(PTRATIO ~ MEDV_CAT, data = UpdatedBostonHousing.df, ylab = "PTRATIO")
boxplot(LSTAT ~ MEDV_CAT, data = UpdatedBostonHousing.df, ylab = "LSTAT")

par(mfcol=c(1, 7))
#Create histogram for each predictor
hist(UpdatedBostonHousing.df$CRIM, main = "Histogram of CRIM", xlab = "CRIM",col = "lightblue",border = "black")
hist(UpdatedBostonHousing.df$NOX, main = "Histogram of NOX", xlab = "NOX",col = "blue",border = "black")
hist(UpdatedBostonHousing.df$AGE, main = "Histogram of AGE", xlab = "AGE",col = "red",border = "black")
hist(UpdatedBostonHousing.df$DIS, main = "Histogram of DIS", xlab = "DIS",col = "green",border = "black")
hist(UpdatedBostonHousing.df$TAX, main = "Histogram of TAX", xlab = "TAX",col = "red",border = "black")
hist(UpdatedBostonHousing.df$PTRATIO, main = "Histogram of PTRATIO", xlab = "PTRATIO",col = "red",border = "black")
hist(UpdatedBostonHousing.df$LSTAT, main = "Histogram of LSTAT", xlab = "LSTAT",col = "red",border = "black")



normalize <- function(x) {
  return ((x - min(x)) / (max(x) - min(x)))
}
#Normalize the data using above function 
UpdatedBostonHousing.df[, c("CRIM", "INDUS","NOX","RM","AGE","DIS","TAX", "PTRATIO","LSTAT")] <- lapply(UpdatedBostonHousing.df[, c("CRIM", "INDUS","NOX","RM","AGE","DIS","TAX", "PTRATIO","LSTAT")], normalize)
head(UpdatedBostonHousing.df)
# Partition data into training 60%, evaluation 20%, and test 20%
library(caret)
set.seed(2023)
samp<-createDataPartition(UpdatedBostonHousing.df$MEDV_CAT, p = 0.6, list = FALSE)
train.df<-UpdatedBostonHousing.df[samp,]
rest.df<-UpdatedBostonHousing.df[-samp,]
samp<-createDataPartition(rest.df$MEDV_CAT, p = 0.5, list = FALSE)
eval.df<-rest.df[samp,]
test.df<-rest.df[-samp,]

# Model-1
# Specify the predictor variables and response variable
predictors <- c("CRIM", "INDUS","NOX","RM","AGE","DIS","TAX", "PTRATIO","LSTAT")  # Include all relevant predictor variables
response <- "MEDV_CAT"
# Train the KNN model on the training data
#k = 3  # Choose an appropriate value for k
library(class)
knn_model <- knn(train.df[, predictors], eval.df[, predictors], train.df[, response], 3)
print(knn_model)
# Evaluate the KNN model on the test data
knn_predictions <- knn(train.df[, predictors], test.df[, predictors], train.df[, response], 3)
print(knn_predictions)
# read new file
new_data<-read_excel("BH_classification_New.xlsx")
new_data[, c("CRIM", "INDUS","NOX","RM","AGE","DIS","TAX","PTRATIO","LSTAT")] <- lapply(new_data[, c("CRIM", "INDUS","NOX","RM","AGE","DIS","TAX", "PTRATIO","LSTAT")], normalize)
head(new_data)
predictors_new<-c("CRIM", "NOX", "AGE", "DIS", "TAX", "PTRATIO","LSTAT")
# Apply the model on normalized new dataset
#PredictionNew_data <- knn(train.df[, predictors], new_data[,predictors_new], train.df$response, k=3)
#print(PredictionNew_data)

# tried to predict new data but having some NAs in DIS variable 


